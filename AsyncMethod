using System;
using System.Diagnostics;
using System.Threading.Tasks;

namespace ConsoleAppCis
{
    class Program
    {
        static void Main(string[] args)
        {
            DisplayRuntime();
            Console.ReadKey();
        }

        static int Fibonacci( int number )
        {
            if (number == 0)
                return 0;
            else if (number == 1)
                return 1;
            else
                return Fibonacci(number-2) + Fibonacci(number-1);
        }

        static void DisplayFibonacci()
        {
            int i = 0;
            while (i++ >= 0)
            {
                Console.WriteLine(Fibonacci(i));
            }
        }

        private static async void DisplayRuntime()
        {
            Stopwatch stopWatch = new Stopwatch();
            stopWatch.Start();

            Task task = new Task(DisplayFibonacci);
            task.Start();

            while (true)
            {
                Task wait = Task.Delay(3000);
                await wait;

                TimeSpan ts = stopWatch.Elapsed;

                string elapsedTime = String.Format("{0:00}:{1:00}:{2:00}.{3:00}",
                    ts.Hours, ts.Minutes, ts.Seconds,
                    ts.Milliseconds / 10);
                Console.WriteLine("RunTime " + elapsedTime);
            }
        }
    }
}
